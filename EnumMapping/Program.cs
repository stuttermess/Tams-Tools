using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;

public enum UnknownEnum
{
    Value_1,
    Value_2,
    Value_3,
    Value_4,
    Value_5,
    Value_6,
    Value_7,
    Value_8,
    Value_9,
    Value_10,
    Value_11,
    Value_12,
    Value_13,
    Value_14,
    Value_15,
    Value_16,
    Value_17,
    Value_18,
    Value_19,
    Value_20,
    Value_21,
    Value_22,
    Value_23,
    Value_24,
    Value_25,
    Value_26,
    Value_27,
    Value_28,
    Value_29,
    Value_30,
    Value_31,
    Value_32,
    Value_33,
    Value_34,
    Value_35,
    Value_36,
    Value_37,
    Value_38,
    Value_39,
    Value_40,
    Value_41,
    Value_42,
    Value_43,
    Value_44,
    Value_45,
    Value_46,
    Value_47,
    Value_48,
    Value_49,
    Value_50,
    Value_51,
    Value_52,
    Value_53,
    Value_54,
    Value_55,
    Value_56,
    Value_57,
    Value_58,
    Value_59,
    Value_60,
    Value_61,
    Value_62,
    Value_63,
    Value_64,
    Value_65,
    Value_66,
    Value_67,
    Value_68,
    Value_69,
    Value_70,
    Value_71,
    Value_72,
    Value_73,
    Value_74,
    Value_75,
    Value_76,
    Value_77,
    Value_78,
    Value_79,
    Value_80,
    Value_81,
    Value_82,
    Value_83,
    Value_84,
    Value_85,
    Value_86,
    Value_87,
    Value_88,
    Value_89,
    Value_90,
    Value_91,
    Value_92,
    Value_93,
    Value_94,
    Value_95,
    Value_96,
    Value_97,
    Value_98,
    Value_99,
    Value_100,
    Value_101,
    Value_102,
    Value_103,
    Value_104,
    Value_105,
    Value_106,
    Value_107,
    Value_108,
    Value_109,
    Value_110,
    Value_111,
    Value_112,
    Value_113,
    Value_114,
    Value_115,
    Value_116,
    Value_117,
    Value_118,
    Value_119,
    Value_120,
    Value_121,
    Value_122,
    Value_123,
    Value_124,
    Value_125,
    Value_126,
    Value_127,
    Value_128,
    Value_129,
    Value_130,
    Value_131,
    Value_132,
    Value_133,
    Value_134,
    Value_135,
    Value_136,
    Value_137,
    Value_138,
    Value_139,
    Value_140,
    Value_141,
    Value_142,
    Value_143,
    Value_144,
    Value_145,
    Value_146,
    Value_147,
    Value_148,
    Value_149,
    Value_150,
    Value_151,
    Value_152,
    Value_153,
    Value_154,
    Value_155,
    Value_156,
    Value_157,
    Value_158,
    Value_159,
    Value_160,
    Value_161,
    Value_162,
    Value_163,
    Value_164,
    Value_165,
    Value_166,
    Value_167,
    Value_168,
    Value_169,
    Value_170,
    Value_171,
    Value_172,
    Value_173,
    Value_174,
    Value_175,
    Value_176,
    Value_177,
    Value_178,
    Value_179,
    Value_180,
    Value_181,
    Value_182,
    Value_183,
    Value_184,
    Value_185,
    Value_186,
    Value_187,
    Value_188,
    Value_189,
    Value_190,
    Value_191,
    Value_192,
    Value_193,
    Value_194,
    Value_195,
    Value_196,
    Value_197,
    Value_198,
    Value_199,
    Value_200,
    Value_201,
    Value_202,
    Value_203,
    Value_204,
    Value_205,
    Value_206,
    Value_207,
    Value_208,
    Value_209,
    Value_210,
    Value_211,
    Value_212,
    Value_213,
    Value_214,
    Value_215,
    Value_216,
    Value_217,
    Value_218,
    Value_219,
    Value_220,
    Value_221,
    Value_222,
    Value_223,
    Value_224,
    Value_225,
    Value_226,
    Value_227,
    Value_228,
    Value_229,
    Value_230,
    Value_231,
    Value_232,
    Value_233,
    Value_234,
    Value_235,
    Value_236,
    Value_237,
    Value_238,
    Value_239,
    Value_240,
    Value_241,
    Value_242,
    Value_243,
    Value_244,
    Value_245,
    Value_246,
    Value_247,
    Value_248,
    Value_249,
    Value_250,
    Value_251,
    Value_252,
    Value_253,
    Value_254,
    Value_255,
    Value_256,
    Value_257,
    Value_258,
    Value_259,
    Value_260,
    Value_261,
    Value_262,
    Value_263,
    Value_264,
    Value_265,
    Value_266,
    Value_267,
    Value_268,
    Value_269,
    Value_270,
    Value_271,
    Value_272,
    Value_273,
    Value_274,
    Value_275,
    Value_276,
    Value_277,
    Value_278,
    Value_279,
    Value_280,
    Value_281,
    Value_282,
    Value_283,
    Value_284,
    Value_285,
    Value_286,
    Value_287,
    Value_288,
    Value_289,
    Value_290,
    Value_291,
    Value_292,
    Value_293,
    Value_294,
    Value_295,
    Value_296,
    Value_297,
    Value_298,
    Value_299,
    Value_300,
    Value_301,
    Value_302,
    Value_303,
    Value_304,
    Value_305,
    Value_306,
    Value_500,
    Value_501,
    Value_502,
    Value_503,
    Value_504,
    Value_505,
    Value_506,
    Value_507,
    Value_508,
    Value_509,
    Value_510,
    Value_511,
    Value_512,
    Value_513,
    Value_514,
    Value_515,
    Value_516,
    Value_517,
    Value_518,
    Value_519,
    Value_520,
    Value_521,
    Value_522,
    Value_523,
    Value_524,
    Value_525,
    Value_526,
    Value_527,
    Value_528,
    Value_529,
    Value_530,
    Value_531,
    Value_532,
    Value_533,
    Value_534,
    Value_535,
    Value_536,
    Value_537,
    Value_538,
    Value_539,
    Value_540,
    Value_541,
    Value_542,
    Value_543,
    Value_544,
    Value_545,
    Value_546,
    Value_547,
    Value_548,
    Value_549,
    Value_550,
    Value_551,
    Value_552,
    Value_553,
    Value_554,
    Value_555,
    Value_556,
    Value_557,
    Value_558,
    Value_559,
    Value_560,
    Value_561,
    Value_562,
    Value_563,
    Value_564,
    Value_565,
    Value_566,
    Value_567,
    Value_568,
    Value_569,
    Value_570,
    Value_571,
    Value_572,
    Value_573,
    Value_574,
    Value_575,
    Value_576,
    Value_577,
    Value_578,
    Value_579,
    Value_580,
    Value_581,
    Value_582,
    Value_583,
    Value_584,
    Value_585,
    Value_586,
    Value_587,
    Value_588,
    Value_589,
    Value_590,
    Value_591,
    Value_592,
    Value_593,
    Value_594,
    Value_595,
    Value_596,
    Value_597,
    Value_598,
    Value_599,
    Value_600,
    Value_601,
    Value_602
}

public static class EnumMapper
{
    private static readonly Dictionary<int, string> StateMappings = new Dictionary<int, string>
    {
        {0, "normal"},
        {1, "revolver"},
        {2, "dynamite"},
        {3, "boots"},
        {4, "grabbed"},
        {5, "tumble"},
        {6, "finishingblow"},
        {7, "ejected"},
        {8, "transition"},
        {9, "fireass"},
        {10, "firemouth"},
        {11, "mort"},
        {12, "mortjump"},
        {13, "mortattack"},
        {14, "morthook"},
        {15, "hook"},
        {16, "ghost"},
        {17, "ghostpossess"},
        {18, "titlescreen"},
        {19, "hookshot"},
        {20, "tacklecharge"},
        {21, "cheeseball"},
        {22, "cheeseballclimbwall"},
        {23, "slap"},
        {24, "cheesepep"},
        {25, "cheesepepstick"},
        {26, "cheesepepjump"},
        {27, "cheesepepfling"},
        {28, "cheesepeplaunch"},
        {29, "cheesepepstickside"},
        {30, "cheesepepstickup"},
        {31, "rideweenie"},
        {32, "motorcycle"},
        {33, "boxxedpep"},
        {34, "boxxedpepspin"},
        {35, "boxxedpepjump"},
        {36, "pistolaim"},
        {37, "climbwall"},
        {38, "knightpepslopes"},
        {39, "portal"},
        {40, "secondjump"},
        {41, "chainsawbump"},
        {42, "handstandjump"},
        {43, "lungeattack"},
        {44, "lungegrab"},
        {45, "dashtumble"},
        {46, "gottreasure"},
        {47, "knightpep"},
        {48, "knightpepattack"},
        {49, "knightpepbump"},
        {50, "meteorpep"},
        {51, "bombpep"},
        {52, "bombgrab"},
        {53, "bombpepside"},
        {54, "bombpepup"},
        {55, "grabbing"},
        {56, "chainsawpogo"},
        {57, "shotgunjump"},
        {58, "pogo"},
        {59, "stunned"},
        {60, "highjump"},
        {61, "chainsaw"},
        {62, "facestomp"},
        {63, "mach4"},
        {64, "timesup"},
        {65, "machroll"},
        {66, "shotgun"},
        {67, "shotguncrouch"},
        {68, "shotguncrouchjump"},
        {69, "shotgunshoot"},
        {70, "shotgundash"},
        {71, "shotgunfreefall"},
        {72, "pistol"},
        {73, "machfreefall"},
        {74, "throwing"},
        {75, "slam"},
        {76, "superslam"},
        {77, "skateboard"},
        {78, "grind"},
        {79, "grab"},
        {80, "punch"},
        {81, "backkick"},
        {82, "uppunch"},
        {83, "shoulder"},
        {84, "backbreaker"},
        {85, "graffiti"},
        {86, "bossdefeat"},
        {87, "pizzathrow"},
        {88, "bossintro"},
        {89, "dead"},
        {90, "keyget"},
        {91, "tackle"},
        {92, "jump"},
        {93, "ladder"},
        {94, "slipnslide"},
        {95, "comingoutdoor"},
        {96, "smirk"},
        {97, "Sjump"},
        {98, "victory"},
        {99, "Sjumpprep"},
        {100, "crouch"},
        {101, "crouchjump"},
        {102, "crouchslide"},
        {103, "mach1"},
        {104, "mach2"},
        {105, "machslide"},
        {106, "bump"},
        {107, "hurt"},
        {108, "freefall"},
        {109, "hang"},
        {110, "turning"},
        {111, "freefallland"},
        {112, "door"},
        {113, "barrel"},
        {114, "barreljump"},
        {115, "barrelclimbwall"},
        {116, "barrelslide"},
        {117, "current"},
        {118, "boulder"},
        {119, "taxi"},
        {120, "runonball"},
        {121, "mach3"},
        {122, "freefallprep"},
        {123, "Sjumpland"},
        {124, "faceplant"},
        {125, "rage"},
        {126, "idle"},
        {127, "bounce"},
        {128, "charge"},
        {129, "pizzagoblinthrow"},
        {130, "turn"},
        {131, "hitceiling"},
        {132, "hitwall"},
        {133, "groundpoundland"},
        {134, "walk"},
        {135, "fall"},
        {136, "land"},
        {137, "hit"},
        {138, "stun"},
        {139, "recovery"},
        {140, "stomped"},
        {141, "chase"},
        {142, "spawnenemy"},
        {143, "arena"},
        {144, "arenaintro"},
        {145, "arenaround"},
        {146, "actor"},
        {147, "parry"},
        {148, "golf"},
        {149, "float"},
        {150, "tube"},
        {152, "policetaxi"},
        {153, "shoulderbash"},
        {154, "pummel"},
        {155, "staggered"},
        {156, "thrown"},
        {157, "supershoulderbash"},
        {158, "superattackstart"},
        {159, "superattackcharge"},
        {160, "superattack"},
        {161, "shoulderturn"},
        {162, "fistmatch"},
        {163, "fistmatchend"},
        {164, "groundpunchstart"},
        {165, "slipbanan"},
        {166, "millionpunch"},
        {167, "skateboardturn"},
        {168, "bombkick"},
        {169, "bombpogo"},
        {170, "jetpackstart"},
        {171, "jetpack"},
        {172, "jetpackcancel"},
        {173, "jetpackspin"},
        {174, "shield"},
        {175, "helicopterhat"},
        {176, "panicjump"},
        {177, "smokebombstart"},
        {178, "smokebombcrawl"},
        {179, "springshoes"},
        {180, "cardboard"},
        {181, "cardboardend"},
        {182, "mockery"},
        {183, "bombdelete"},
        {184, "rocket"},
        {185, "rocketslide"},
        {186, "gotoplayer"},
        {187, "trickjump"},
        {188, "totem"},
        {189, "underground"},
        {190, "ridecow"},
        {191, "ratmount"},
        {192, "ratmountjump"},
        {193, "ratmountattack"},
        {194, "ratmountspit"},
        {195, "ratmountclimbwall"},
        {196, "ratmounthurt"},
        {197, "ratmountgroundpound"},
        {198, "ratmountbounce"},
        {200, "ratmountballoon"},
        {201, "ratmounttumble"},
        {202, "ratmountgrind"},
        {203, "ratmounttrickjump"},
        {204, "ratmountskid"},
        {205, "ratgrabbed"},
        {206, "blockstance"},
        {207, "balloon"},
        {208, "debugstate"},
        {209, "trashjumpprep"},
        {210, "trashjump"},
        {211, "trashroll"},
        {212, "stringfling"},
        {213, "stringjump"},
        {214, "stringfall"},
        {215, "noisejetpack"},
        {216, "spiderweb"},
        {217, "robotidle"},
        {218, "robotintro"},
        {219, "robotroaming"},
        {220, "robotchase"},
        {221, "robotinvestigate"},
        {222, "robotseeking"},
        {223, "flushidle"},
        {224, "flushtransition"},
        {225, "animatronic"},
        {226, "pizzaface_moustache"},
        {227, "pizzaface_mouth"},
        {228, "pizzaface_eyes"},
        {229, "pizzaface_nose"},
        {230, "pizzaface_ram"},
        {231, "pizzaface_phase2transition"},
        {232, "pizzahead_look"},
        {233, "pizzahead_fishing"},
        {235, "pizzahead_bombrun"},
        {236, "pizzahead_npcthrow"},
        {237, "pizzahead_portraitthrow"},
        {238, "pizzahead_enguarde"},
        {239, "pizzahead_sexypicture"},
        {240, "pizzahead_pullinglevel"},
        {241, "pizzahead_eat"},
        {242, "pizzahead_surprisebox"},
        {243, "pizzahead_spinningrun"},
        {244, "pizzahead_spinningkick"},
        {245, "pizzahead_spinningpunch"},
        {246, "pizzahead_groundpunch"},
        {247, "pizzahead_bigkick"},
        {248, "pizzahead_slamhead"},
        {249, "pizzahead_slamhead2"},
        {250, "tv_whitenoise"},
        {251, "tv_expression"},
        {252, "playersuperattack"},
        {254, "jetpackjump"},
        {257, "bee"},
        {258, "bee_chase"},
        {259, "ratmountpunch"},
        {260, "ratmountcrouch"},
        {261, "ratmountladder"},
        {262, "supergrab"},
        {264, "magnet"},
        {265, "antigrav"},
        {266, "secret"},
        {267, "contemplate"},
        {268, "mini"},
        {269, "reloading"},
        {270, "estampede"},
        {271, "dropstart"},
        {272, "drop"},
        {273, "phase1hurt"},
        {274, "duel"},
        {275, "deformed"},
        {276, "grabdash"},
        {277, "grabthrow"},
        {278, "wait"},
        {279, "flamethrower"},
        {280, "machinegun"},
        {281, "bazooka"},
        {282, "crate"},
        {283, "noisecrusher"},
        {284, "droptrap"},
        {285, "skateboardnoise"},
        {286, "noiseballooncrash"},
        {287, "swinging"},
        {288, "stomp"},
        {289, "ending"},
        {290, "backtohub"},
        {291, "johnghost"},
        {292, "spaceshuttle"},
        {293, "animation"},
        {294, "pizzaheadjump"},
        {295, "fightball"},
        {296, "secretenter"},
        {297, "teleport"},
        {298, "KO"},
        {299, "camera_followtarget"},
        {300, "stick_flying"},
        {301, "stick_flyattack"},
        {302, "stick_superjump"},
        {303, "stick_flycancel"},
        {304, "UNKNOWN_5"},
        {305, "machcancelstart"},
        {306, "machcancel"},
        {500, "cotton"},
        {501, "cottondrill"},
        {502, "cottonroll"},
        {503, "fling"},
        {504, "twirl"},
        {505, "frothstuck"},
        {506, "rupertnormal"},
        {507, "rupertslide"},
        {508, "rupertjump"},
        {509, "rupertstick"},
        {600, "debugfly"},
        {601, "frozen"},
        {602, "swimming"},

    };

    public static string GetMappedState(string userInput)
    {
        var match = Regex.Match(userInput.Trim(), @"^UnknownEnum\.Value_(\d+)$");
        if (match.Success && int.TryParse(match.Groups[1].Value, out int value))
        {
            if (StateMappings.TryGetValue(value, out string stateName))
            {
                return $"states.{stateName}";
            }
            else
            {
                Console.WriteLine("Mapping not found in dictionary.");
            }
        }
        return $"{userInput}.. - Dude what? that isnt in there vro";
    }
}

public class Program
{
    public static void Main()
    {
        while (true)
        {
            Console.WriteLine("Enter an enum value (e.g., 'UnknownEnum.Value_1') or type 'exit' to quit:");
            string userInput = Console.ReadLine();

            if (userInput.ToLower() == "exit")
                break;

            string mappedState = EnumMapper.GetMappedState(userInput);
            Console.WriteLine($"Mapped State: {mappedState}");
        }
    }
}
